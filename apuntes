DOM -> Document Object Model
Es el lugar en donde se ve todo lo escrito en HTML
tranformacion del HTML en objetos que son entendibles 
por el navegador

CSSOM -> CSS Object Model
Renderiza el estilo de los objetos
tranforma el arbol asignandole el CSS que se le asigna

Render tree -> DOM y CSSOM juntos para poder ver las paginas
web

5 pasos del navegador
Bytes-> coger el codigo y transformalo a bytes

characters-> tranformar esos bytes a caracteres, con la codificacion que se
            indique, ejemplo UTF-8

tokens-> identifica inicio y final de las etiquetas, sigue la especificacion W3C
identifica cada una de las etiquetas, transforma a elementos HTML segun los caracteres
que se asignan 

nodes-> son objetos que se referencian a las etiquetas HTML

DOM -> arbol estructural de etiquetas HTML

PASOS DEL NAVEGADOR
1 procesar html y construir el dom 
2 procesar el css y construir el CSSOM
3 DOM y CSSOM contruyen render tree
4 ejecutar el diseño en el render tree
5 pintar el nodo en la pantalla

ANATOMIA DE UN ELEMENTO HTML 
etiqueta de apertura, contenido, etiqueta de cierre
<h1>Hola</h1>

SEUDOCLASES DE CSS
p:first-child{ ->> primer elemento p

}
p:last-child{ -->> ultimo elemento p

}
p:nth-child(2n){ -->> numero ordinales pares

}

ARQUITECTURAS DE CSS
Objetivos
-predecibles
-reutilizable
-mantenible
-escalable

Buenas prácticas
-Establecer reglas
-Explicar la estructura base
-Establecer estándares de codificación
-Evitar largas hojas de estilo
-Documentación
 
ARQUITECTURAS DE CSS
OOCSS
CSS ORIENTADO A OBJETOS, separa el diseño del contenido
compartir las propiedades entre elementos que se repitan
footer y header comparten el width
.globalwidth{
    width: 100%;
}

BEM -> bloques, elementos y modificadores
<header class="header">
    <button class="header__button--red">RED</button>
    <button class="header__button--yellow">YELLOW</button>
</header>
header->bloque
button->elemento
yellow o red->modificador

SMACSS
Arquitectura de CSS escalable y modular
Componentes Base -> elementos que se utilizan mucho (botones)
Layout -> elementos que se utilizan 1 vez (header, footer)
Module -> Componentes que se usan mas de una vez
State -> Estados, acciones de los componentes
Theme -> Cambio de temas y colores


ITCSS -> Triangulo invertido de CSS

ATOMIC DESIGN -> separar atomos
atomos -> elementos mas pequeños
moleculas -> elementos mas grandes
organismos ->
templates ->

QUE ES UN COMPONENTE?
Es una pieza muy pequeña que sirve para construir algo mas grande

